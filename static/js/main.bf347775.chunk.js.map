{"version":3,"sources":["Menu.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","height","windowSize","useContext","ResponsiveTopicMapContext","DefaultAppMenu","menuTitle","titleCheckBoxlabel","introductionMarkdown","simpleHelp","content","sections","_10statistics","Section","sectionKey","sectionTitle","sectionBsStyle","sectionContent","width","frameBorder","src","host","getGazData","setGazData","a","prefix","sources","md5FetchText","adressen","bezirke","quartiere","pois","kitas","gazData","getGazDataForTopicIds","convertPOIItemsToFeature","itemIn","console","log","addSVGToProps","i","signatur","mainlocationtype","item","text","name","geometry","geojson","color","info","header","lebenslagen","join","title","additionalInfo","subtitle","adresse","type","selected","crs","properties","mapTitle","App","useState","useEffect","document","TopicMapContextProvider","appKey","featureItemsURL","getFeatureStyler","getGTMFeatureStyler","featureTooltipFunction","feature","convertItemToFeature","clusteringOptions","iconCreateFunction","getClusterIconCreatorFunction","props","itemFilterFunction","toLowerCase","includes","clusteringEnabled","getColorFromProperties","titleFactory","TopicMapComponent","modalMenu","homeCenter","homeZoom","locatorControl","infoBox","GenericInfoBoxFromFeature","pixelwidth","config","city","navigator","noun","singular","plural","noCurrentFeatureTitle","noCurrentFeatureContent","FeatureCollection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf347775.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport DefaultAppMenu from \"react-cismap/topicmaps/menu/DefaultAppMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nconst Menu = () => {\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  let height;\n\n  if (windowSize?.height) {\n    height = windowSize?.height * 0.6;\n  } else {\n    height = 250;\n  }\n  return (\n    <DefaultAppMenu\n      menuTitle='Einstellungen und Kompaktanleitung'\n      titleCheckBoxlabel='Titel anzeigen'\n      introductionMarkdown={`Über **Einstellungen** können Sie die Darstellung der Hintergrundkarte \n                und der Objekte an Ihre Vorlieben anpassen. Unter **Statistik** finden \n                Sie eine Darstellung der aktuellen Fallzahlen. Wählen Sie \n                **Kompaktanleitung** für detailliertere Bedienungsinformationen.\n      `}\n      simpleHelp={{\n        content: `Mit Blick auf die aktuelle Verbreitung des Corona-Virus sind in Deutschland \n                    bereits zahlreiche Schutzmaßnahmen erlassen worden. Ziel ist es, eine Ausbreitung \n                    des Virus zu verlangsamen. Ein kostenloser Schnelltest pro Woche - dieses Angebot \n                    richtet sich seit Mitte März an jede Bürgerin und jeden Bürger. Auch in Wuppertal \n                    entstehen immer mehr Schnelltestzentren. `,\n      }}\n      sections={{\n        _10statistics: (\n          <Section\n            key='statistik'\n            sectionKey='StatistikSection'\n            sectionTitle='Statistik'\n            sectionBsStyle='danger'\n            sectionContent={\n              <div>\n                <h4>Aktuelle Fallzahlen-Grafik für Wuppertal </h4>\n                <p>\n                  Die folgende Grafik wird stündlich an aktuelle Fallzahlen angepasst. Sie können\n                  mit dem Mauszeiger einen Tag auswählen und bekommen die entsprechende Zahl mit\n                  Datum angezeigt. Zwischen Grafik und den oberen Tabellen kann es leichte\n                  Unterschiede geben, denn die Tabellen werden nur einmal am Tag (montags bis\n                  freitags) aktualisiert.\n                </p>\n                <h4>Funktionen:</h4>\n                <p>\n                  Durch Anklicken der farbigen Punkte unten in der Legende können Sie einzelne\n                  Rubriken ausblenden.\n                </p>\n                <iframe\n                  width='100%'\n                  frameBorder='0'\n                  height={height}\n                  src='https://stadt-wuppertal.maps.arcgis.com/apps/opsdashboard/index.html#/08a2f92cd26c4f459a7f0ee42f7653ce'\n                ></iframe>\n              </div>\n            }\n          />\n        ),\n      }}\n    ></DefaultAppMenu>\n  );\n};\nexport default Menu;\n","import { useEffect } from \"react\";\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-cismap/topicMaps.css\";\nimport { md5FetchText, fetchJSON } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\n\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport { getClusterIconCreatorFunction } from \"react-cismap/tools/uiHelper\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport DefaultAppMenu from \"react-cismap/topicmaps/menu/DefaultAppMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport MyMenu from \"./Menu\";\nimport FeatureCollection from \"react-cismap/FeatureCollection\";\nimport GenericInfoBoxFromFeature from \"react-cismap/topicmaps/GenericInfoBoxFromFeature\";\nimport getGTMFeatureStyler from \"react-cismap/topicmaps/generic/GTMStyler\";\nimport { addSVGToProps } from \"react-cismap/tools/svgHelper\";\n\nconst host = \"https://wupp-topicmaps-data.cismet.de\";\n\nconst getGazData = async (setGazData) => {\n  const prefix = \"GazDataForStories\";\n  const sources = {};\n\n  sources.adressen = await md5FetchText(prefix, host + \"/data/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, host + \"/data/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, host + \"/data/quartiere.json\");\n  sources.pois = await md5FetchText(prefix, host + \"/data/pois.json\");\n  sources.kitas = await md5FetchText(prefix, host + \"/data/kitas.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"pois\",\n    \"kitas\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setGazData(gazData);\n};\nconst convertPOIItemsToFeature = async (itemIn) => {\n  console.log(\"itemIn\", itemIn);\n\n  let item = await addSVGToProps(\n    itemIn,\n    (i) => i.signatur || i?.mainlocationtype?.signatur || \"Platz.svg\"\n  );\n  const text = item?.name || \"Kein Name\";\n  const type = \"Feature\";\n  const selected = false;\n  const geometry = item?.geojson;\n  item.color = \"#CB0D0D\";\n  const info = {\n    header: item?.mainlocationtype?.lebenslagen?.join(\",\"),\n    title: text,\n    additionalInfo: item?.info,\n    subtitle: <span>{item?.adresse}</span>,\n  };\n  item.info = info;\n\n  return {\n    text,\n    type,\n    selected,\n    geometry,\n    crs: {\n      type: \"name\",\n      properties: {\n        name: \"urn:ogc:def:crs:EPSG::25832\",\n      },\n    },\n    properties: item,\n  };\n};\n\nconst mapTitle = \"Corona-Präventionskarte\";\nfunction App() {\n  const [gazData, setGazData] = useState([]);\n  useEffect(() => {\n    document.title = mapTitle;\n    getGazData(setGazData);\n  }, []);\n  return (\n    <TopicMapContextProvider\n      appKey='CoronaPraeventionskarteWuppertal.TopicMap'\n      featureItemsURL={\"https://wupp-topicmaps-data.cismet.de/data/poi.data.json\"}\n      getFeatureStyler={getGTMFeatureStyler}\n      featureTooltipFunction={(feature) => feature?.text}\n      convertItemToFeature={convertPOIItemsToFeature}\n      clusteringOptions={{\n        iconCreateFunction: getClusterIconCreatorFunction(30, (props) => props.color),\n      }}\n      itemFilterFunction={() => {\n        return (item) => item?.mainlocationtype?.name?.toLowerCase().includes(\"corona\");\n        // item?.name?.toLowerCase().includes(\"test\");\n      }}\n      clusteringEnabled={true}\n      getColorFromProperties={(props) => props.color}\n      titleFactory={() => {\n        return (\n          <div>\n            <b>{mapTitle}</b>\n          </div>\n        );\n      }}\n    >\n      <TopicMapComponent\n        modalMenu={<MyMenu />}\n        homeCenter={[51.2425605868143, 7.185153968951078]}\n        homeZoom={8}\n        locatorControl={true}\n        gazData={gazData}\n        infoBox={\n          <GenericInfoBoxFromFeature\n            pixelwidth={400}\n            config={{\n              city: \"Wuppertal\",\n              navigator: {\n                noun: {\n                  singular: \"Zentrum\",\n                  plural: \"Zentren\",\n                },\n              },\n              noCurrentFeatureTitle: \"Keine Zentren gefunden\",\n              noCurrentFeatureContent: \"\",\n            }}\n          />\n        }\n      >\n        <FeatureCollection />\n      </TopicMapComponent>\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}